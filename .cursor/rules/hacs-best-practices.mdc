---
description: HACS repository best practices and development workflow
---

# HACS Blueprint Repository Best Practices

## Professional Repository Standards
Based on successful HACS integration patterns, apply these standards:

### 1. Repository Quality
- **CI/CD Pipeline**: GitHub Actions for validation (HACS validate, hassfest)
- **Release Management**: Semantic versioning with automated tagging
- **Documentation**: Comprehensive README with installation badges
- **Community Standards**: CONTRIBUTING.md, issue templates, security policy

### 2. HACS Package Configuration  
**[hacs.json](mdc:hacs.json) Requirements**:
- Domains: `["automation"]` for blueprint packages
- Minimum HA version: `"2024.6.0"` (for Spook compatibility)
- `render_readme: true` for dynamic documentation
- `content_in_root: false` for organized structure

### 3. Blueprint Standards
- **Input Validation**: Default values for all blueprint inputs
- **Error Handling**: Graceful fallbacks for missing services/entities  
- **User Experience**: Clear variable names and descriptions
- **Testing Strategy**: Manual validation with synthetic failures

### 4. Development Workflow Insights
From previous agent success patterns:
- **Todo-Driven Development**: Break complex changes into trackable tasks
- **Parallel Tool Execution**: Gather all needed information simultaneously  
- **Comprehensive Testing**: Validate at multiple levels (syntax, logic, integration)
- **Documentation Synchronization**: Update all related files atomically

### 5. Release Process
1. **Validation**: HACS validate + hassfest checks pass
2. **Tagging**: Semantic version tags (v0.1.0) for HACS discovery
3. **Documentation**: README with import badge using raw GitHub URLs
4. **Distribution**: Add as Custom Repository â†’ submit to HACS default index

## Import Badge Template
```markdown
[![Import Blueprint](https://my.home-assistant.io/badges/blueprint_import.svg)](https://my.home-assistant.io/redirect/blueprint_import/?blueprint_url=https%3A//raw.githubusercontent.com/USER/REPO/main/blueprints/automation/integration_watchdog_auto.yaml)
```